/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2011, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

apply plugin: 'idea'

group='org.jboss.snowdrop'

version='2.0.4.Final'

versions = [jbossVfs3: '3.1.0.Final',jbossVfs2: '2.1.3.SP1', jbossMan: '2.1.0.GA',
		jbossMdr: '2.2.0.Alpha1', jbossMdrVfs2: '2.0.2.GA', jbossKernel: '2.2.0.Alpha6',
		jbossDeployers: '2.2.0.Alpha2',
		jbossxb: '2.0.2.Beta4',
		jbossAop: '2.0.1.GA',
		jbossPojocache: '3.0.0.GA',
		jbossTest: '1.1.9.GA',
		junit: '4.4',
		javaassist: '3.11.0.GA',
		javaee: '3.0.0.GA',
		xerces: '2.9.1',
		aopalliance: '1.0',
		jbossAs7: '7.1.0.Final',
		jandex: '1.0.0.Beta7',
		aspectj: '1.6.6',
		jbossMsc: '1.0.1.GA',
		javaxResource: '1.0.0.Final',
		ironjacamar: '1.0.4.Final',
		jbossModules: '1.0.2.GA',
		spring25:'2.5.6.SEC02',
		spring3:'3.0.6.RELEASE',
		spring31:'3.1.0.RELEASE',
		jbossLogging:'2.1.0.GA',
		jbossClassloader: '2.2.0.Alpha3',
		javaxServlet: '2.3',
		jbossInvocation: '1.0.0.Final',
		jbossReflect:'2.2.0.Alpha2',
		jbossTest:'1.1.9.GA',
		jbossDeployerVsf:'2.0.8.SP1',
		jbossJandex:'1.0.0.Beta7',
		aspectj: '1.6.8',
		aopalliance:'1.0',
		saxon:'8.7']

def springDependencies25 = [
	[group:'org.springframework', name:'spring-core', version: versions.spring25],
	[group:'org.springframework', name:'spring-context', version: versions.spring25],
	[group:'org.springframework', name:'spring-webmvc', version: versions.spring25],
	[group:'org.springframework', name:'spring-jms', version: versions.spring25],
	[group:'org.springframework', name:'spring-aop', version: versions.spring25],
	[group:'org.springframework', name:'spring-beans', version: versions.spring25],
	[group:'org.springframework', name:'spring-context-support', version: versions.spring25],
	[group:'org.springframework', name:'spring-web', version: versions.spring25],
]

def springDependencies3 = [
	[group:'org.springframework', name:'spring-core', version: versions.spring3],
	[group:'org.springframework', name:'spring-context', version: versions.spring3],
	[group:'org.springframework', name:'spring-webmvc', version: versions.spring3],
	[group:'org.springframework', name:'spring-jms', version: versions.spring3],
	[group:'org.springframework', name:'spring-aop', version: versions.spring3],
	[group:'org.springframework', name:'spring-asm', version: versions.spring3],
	[group:'org.springframework', name:'spring-beans', version: versions.spring3],
	[group:'org.springframework', name:'spring-context-support', version: versions.spring3],
	[group:'org.springframework', name:'spring-expression', version: versions.spring3],
	[group:'org.springframework', name:'spring-web', version: versions.spring3],
]

def springDependencies31 = [
	[group:'org.springframework', name:'spring-core', version: versions.spring31],
	[group:'org.springframework', name:'spring-context', version: versions.spring31],
	[group:'org.springframework', name:'spring-webmvc', version: versions.spring31],
	[group:'org.springframework', name:'spring-jms', version: versions.spring31],
	[group:'org.springframework', name:'spring-aop', version: versions.spring31],
	[group:'org.springframework', name:'spring-asm', version: versions.spring31],
	[group:'org.springframework', name:'spring-beans', version: versions.spring31],
	[group:'org.springframework', name:'spring-context-support', version: versions.spring31],
	[group:'org.springframework', name:'spring-expression', version: versions.spring31],
	[group:'org.springframework', name:'spring-web', version: versions.spring31],
]

repositories {	
	mavenLocal()
}

configurations{
	snowdropDependencies
	xslt
}

dependencies{
	snowdropDependencies group:'org.aspectj', name:'aspectjrt', version: versions.aspectj
	snowdropDependencies group:'org.aspectj', name:'aspectjweaver', version:versions.aspectj
	snowdropDependencies group:'aopalliance', name:'aopalliance', version:versions.aopalliance
	snowdropDependencies group:'cglib', name:'cglib-nodep', version:'2.2.2'
	xslt group:'net.sf.saxon', name:'saxon', version:versions.saxon
}

task install() {
	onlyIf{"$System.env.JBOSS_HOME"!=""}
}

install.doLast {
	tasks.installSpring.execute()
}

task installSpring (dependsOn: [install]){
	onlyIf{"$System.env.JBOSS_HOME"!=""}
}

installSpring.doFirst {
	ant.input(message: 'Which version of Spring do you want to install?', validargs: '2.5,3,3.1,n', addproperty: 'springVersion')
	if(ant.springVersion == '2.5') {
		println 'Installing 2.5'
		dependencies{
			snowdropDependencies springDependencies25
		}
	}
	else if(ant.springVersion == '3') {
		println 'Installing 3'
		dependencies{
			snowdropDependencies springDependencies3
		}
	}
	else if(ant.springVersion == '3.1') {
		println 'Installing 3.1'
		dependencies{
			snowdropDependencies springDependencies31
		}
	}
	else if(ant.springVersion == 'n') {
		throw new StopExecutionException("Not installing Spring Dependencies")
	}
	
	
	copy{
		jbossHome = "$System.env.JBOSS_HOME"
		from configurations.snowdropDependencies.copy().setTransitive(false)
		rename { name ->
		  def artifacts = configurations.snowdropDependencies.resolvedConfiguration.resolvedArtifacts
		  def artifact = artifacts.find { it.file.name == name }
		  "${artifact.name}.${artifact.extension}"
		}
		into jbossHome + '/modules/org/springframework/spring/snowdrop'
		include '**/*.jar'
	}
	
	copy {
		jbossHome = "$System.env.JBOSS_HOME"
		from 'subsystem-as7/modules/spring-' + ant.springVersion + '/src/main/module'
		into jbossHome + '/modules/org/springframework/spring/snowdrop'
		include '**/*.xml'
	}
}

installSpring.doLast {
	ant.xslt(in: jbossHome + '/standalone/configuration/standalone.xml', style: 'install.xml',
			 out:   jbossHome + '/standalone/configuration/standalone-new.xml',
			 classpath: configurations.xslt.asPath)
	copy{
		from jbossHome + '/standalone/configuration/standalone-new.xml'
		into jbossHome + '/standalone/configuration/'
		rename { String fileName ->
			'standalone.xml'
		}
	}
	ant.input(message: 'Do you want to config the snowdrop install in domain mode?', validargs: 'yes,no', addproperty: 'config')
	
	if (ant.config == 'yes'){
		exec {
			commandLine './install.sh'
		}
	}
}

